@{
	ViewData["Title"] = "Info-Tv näkymä";
}
<head>
	<style>
		.infotv_bg {
			height: 100%;
			width: 100%;
			object-fit: cover;
			z-index: 1;
			position: absolute;
			top: 0;
			left: 0;
		}

		.template {
			height: 100%;
			width: 100%;
			object-fit: fill;
			z-index: 2;
			position: absolute;
			top: 0;
			left: 0;
			opacity: 0.85;
		}

		.ruokacontainer {
			
			z-index: 3;
			position: absolute;
			top: 10px;
			left: 10px;
			bottom: 10px;
			width: 73.5%;
		}
		.daytitle{
			font-weight: bold;
			font-size: 2.5vw;
		}

		.ruokateksti{
			font-size: 2.3vw;
			margin-bottom: 10px;
		}


	</style>
	<script src="/js/aanestys.js"></script>
	<script src="/js/infotv.js"></script>
	<link rel="stylesheet" href="/css/aanestys.css">

	<script>
		fetch('/infotv/GetBgForWeek?week=@ViewBag.viikko')
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				console.log('Bg url = ' + data.fileName);
				document.getElementById('Background-image').src = data.fileName;


			})
			.catch(error => {
				console.error('There was a problem with the fetch operation:', error);
			});


		function showPreview(event) {
			var input = event.target;
			var reader = new FileReader();
			reader.onload = function () {
				var image = document.getElementById('bg');
				image.src = reader.result;
			};
			reader.readAsDataURL(input.files[0]);
		}

		const isOverflown = ({ clientHeight, scrollHeight }) => scrollHeight > clientHeight
		const resizeText = ({ element, elements, minSize = 1.2, maxSize = 3.3, step = 1, unit = 'vw' }) => {
			(elements || [element]).forEach(el => {
				let i = minSize
				let overflow = false

				const parent = el.parentNode

				while (!overflow && i < maxSize) {
					el.style.fontSize = `${i}${unit}`
					overflow = isOverflown(parent)

					if (!overflow) i += step
				}

				// revert to last state where no overflow happened
				el.style.fontSize = `${i - step}${unit}`
			})
		}

		window.addEventListener("resize", function () {
			console.log("resizing");
			resizeText({
				elements: document.querySelectorAll('.autosize'),
				step: 0.1
			});
			
		});

		document.addEventListener("DOMContentLoaded", function () {
			resizeText({
				elements: document.querySelectorAll('.autosize'),
				step: 0.1
			});

		});

		//luo votebar
		document.addEventListener("DOMContentLoaded", function () {
			//ajastin
			 const currentDate = new Date();
			const currentHour = currentDate.getHours();

			
			var aanestysbox = document.getElementById("aanestysbox");
			
			var showBool = @Html.Raw(ViewBag.nykyinenviikko?.ToString()?.ToLower());
			var weekid = @ViewBag.viikko
			var year = @ViewBag.Vuosi

			createInfoTvVoteBar(aanestysbox, showBool, weekid, year);


			 // Check if the current time is between 9 am and 1 pm (inclusive)
			if (currentHour >= 9 && currentHour <= 13) {
				
				// Set an interval to run your function every 10 minutes
				setInterval(() => {
					createInfoTvVoteBar(aanestysbox, showBool, weekid, year);
				}, 10 * 60 * 1000); // 10 minutes interval
			} else {
				aanestysbox.remove();
				console.log('Current time is not between 9 am and 1 pm.');
			}
});


		

	</script>

</head>
<body style="background-color: #2c2f33">
	<img id="Background-image" class="infotv_bg" src="~/samplebg_infotv.jpg" />
	<img class="template" src="~/infotv_template_bk.png" />
	<div class="ruokacontainer" style=" text-align:center; color:white; font-family:'Segoe UI'">

		@{
			if (ViewBag.RuokaOlemassa)
			{
								@if (ViewBag.NytOnSeuraavaViikko ?? false)
				{
									<div style="font-size:3.8vw; font-weight:bold; margin-bottom:10px">Seuraavan viikon(@ViewBag.viikko) ruokalista</div>
				}
				else
				{
									<div style="font-size:3.8vw; font-weight:bold">Tämän viikon(@ViewBag.viikko) ruokalista</div>
				}


				RuokalistaServer.Models.Ruokalista ruoka = ViewBag.ruokalista;

				if (ViewBag.Nykyinenviikko && DateTime.Now.DayOfWeek == DayOfWeek.Monday)
				{
									<div class="autosize daytitle" style="color:orange;">Maanantai</div>
									<div class="autosize ruokateksti" style="color:orange;">@ruoka.Maanantai</div>
				}
				else
				{
									<div class="autosize daytitle">Maanantai</div>
									<div class="autosize ruokateksti">@ruoka.Maanantai</div>
				}

				


				if (ViewBag.Nykyinenviikko && DateTime.Now.DayOfWeek == DayOfWeek.Tuesday)
				{
									<div class="autosize daytitle" style="color:orange;">Tiistai</div>
									<div class="autosize ruokateksti" style="color:orange">@ruoka.Tiistai</div>
				}
				else
				{
									<div class="autosize daytitle">Tiistai</div>
									<div class="autosize ruokateksti">@ruoka.Tiistai</div>
				}

				


				if (ViewBag.Nykyinenviikko && DateTime.Now.DayOfWeek == DayOfWeek.Wednesday)
				{
									<div class="autosize daytitle" style="color:orange;">Keskiviikko</div>
									<div class="autosize ruokateksti" style="color:orange">@ruoka.Keskiviikko</div>
				}
				else
				{
									<div class="autosize daytitle">Keskiviikko</div>
									<div class="autosize ruokateksti">@ruoka.Keskiviikko</div>
				}

				

				if (ViewBag.Nykyinenviikko && DateTime.Now.DayOfWeek == DayOfWeek.Thursday)
				{
									<div class="autosize daytitle" style="color:orange;">Torstai</div>
									<div class="autosize ruokateksti" style="color:orange">@ruoka.Torstai</div>
				}
				else
				{
									<div class="autosize daytitle">Torstai</div>
									<div class="autosize ruokateksti">@ruoka.Torstai</div>
				}

				

				if (ViewBag.Nykyinenviikko && DateTime.Now.DayOfWeek == DayOfWeek.Friday)
				{
									<div class="autosize daytitle" style="color:orange;">Perjantai</div>
									<div class="autosize ruokateksti" style="color:orange">@ruoka.Perjantai</div>
				}
				else
				{
									<div class="autosize daytitle">Perjantai</div>
									<div class="autosize ruokateksti">@ruoka.Perjantai</div>
				}

				
			}
			else
			{
								<h1 style="font-size:4vw">Tämän viikon ruokalistaa ei vielä ole</h1>
			}

		}
	</div>
	<img src="~/mainos3.png" style="width:19vw; height:25vw; position:absolute; bottom:50px; right:10px; z-index:4" />
	<img src="~/ig.png" style="width:19vw; height:3vw; position:absolute; bottom:0px; right:10px; z-index:4" />

	<div id="aanestysbox" style="top:5px; right:5px; z-index:4; position: absolute;  width:24vw; height: 9vw; background-color: #222; border-radius: 10px; opacity:80%; text-align:center;">
		<h2 class="infotv-title">Tämän päivän äänestystulokset</h2>
		<h4 id="voteCounter" class="voteCountTitle" style="font-size: 1.2em">0 ääntä</h4>
	</div>
</body>

